#!/bin/sh
#   Copyright (c) 2010-2011, Diaspora Inc.  This file is
#   licensed under the Affero General Public License version 3 or later.  See
#   the COPYRIGHT file.

. script/console-commands.sh

if [ "$1" != "--no-check" ]; then
    . script/check-all
else
    status "Checks has been disabled."
fi

# Setup environment
status "Setting up environment."
if [ -z "$RAILS_ENV" ]
then
  RAILS_ENV=$(bin/bundle exec ruby ./script/get_config.rb server.rails_environment)
  on_failure "Couldn't parse config/diaspora.yml!"
  export RAILS_ENV
fi


os=$(uname -s)
vars=$(bin/bundle exec ruby ./script/get_config.rb \
  port=server.port \
  single_process_mode=environment.single_process_mode? \
  embed_sidekiq_worker=server.embed_sidekiq_worker \
  workers=server.sidekiq_workers \
  chat=chat.enabled \
  chat_server=chat.server.enabled \
  chat_bosh_proxy=chat.server.bosh.proxy
)
on_failure "Couldn't parse config/diaspora.yml!"
eval "$vars"

if [ -n "$DB" ]
then
  export DB
fi


# Start Diaspora
status "Starting Diaspora in $RAILS_ENV mode "
if [ -n "$PORT" ]
then
  printf "on port $PORT "
fi
if [ "$embed_sidekiq_worker" = "true" ]
then
  echo "with a Sidekiq worker embedded into Unicorn."
  workers=0
elif [ "$single_process_mode" = "true" ]
then
  echo "with job processing inside the request cycle."
  workers=0
else
  echo "with $workers Sidekiq worker(s)."
fi
echo ""


# Launching...
status "Launching sidekiq..."
bin/bundle exec sidekiq > log/sidekiq-last-run.log &

if [ "$chat" = "true" -a "$chat_server" = "true" ]
then
    status "Launching vines... Yay! You're using XMPP!!!" 
    bin/bundle exec vines start > log/vines-las-run.log &
fi

echo -e "Question: Have you used $green nohup $white for starting this script? maybe you should consider that... 
Like this: $green nohup script/server & $white"

status "Launching unicorn..."
bin/bundle exec unicorn -c config/unicorn.rb


